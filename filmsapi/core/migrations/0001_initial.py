# Generated by Django 4.1.1 on 2023-05-04 10:59

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('photo', models.URLField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('N', 'No definido')], max_length=1)),
                ('principal_role', models.CharField(max_length=50)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('death_date', models.DateField(blank=True, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('birth_place', models.CharField(blank=True, max_length=150, null=True)),
                ('biography', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'person',
                'verbose_name_plural': 'people',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('original_title', models.CharField(max_length=150)),
                ('state', models.CharField(max_length=20)),
                ('original_language', models.CharField(max_length=50)),
                ('budget', models.CharField(blank=True, max_length=20, null=True, verbose_name='Presupuesto')),
                ('income', models.CharField(blank=True, max_length=20, null=True, verbose_name='Ingresos')),
                ('year', models.DateField()),
                ('image', models.URLField()),
                ('certification', models.CharField(blank=True, max_length=10, null=True)),
                ('overview', models.TextField(blank=True, null=True)),
                ('duration', models.CharField(blank=True, max_length=10, null=True)),
                ('score', models.CharField(max_length=5)),
                ('cast', models.ManyToManyField(related_name='rel_cast', to='core.person')),
                ('category', models.ManyToManyField(related_name='rel_category', to='core.category')),
                ('characters', models.ManyToManyField(related_name='rel_characters', to='core.person')),
                ('director', models.ManyToManyField(related_name='rel_director', to='core.person')),
                ('novel', models.ManyToManyField(related_name='rel_novel', to='core.person')),
                ('screenplay', models.ManyToManyField(related_name='rel_screenplay', to='core.person')),
                ('story', models.ManyToManyField(related_name='rel_story', to='core.person')),
                ('writer', models.ManyToManyField(related_name='rel_writer', to='core.person')),
            ],
            options={
                'verbose_name': 'film',
                'verbose_name_plural': 'films',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=25)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
